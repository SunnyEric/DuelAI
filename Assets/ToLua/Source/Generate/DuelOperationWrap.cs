//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class DuelOperationWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(DuelOperation), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("DrawCardOwn", DrawCardOwn);
		L.RegFunction("DrawCardOps", DrawCardOps);
		L.RegFunction("DrawThisCard", DrawThisCard);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("duelData", get_duelData, set_duelData);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawCardOwn(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			DuelOperation obj = (DuelOperation)ToLua.CheckObject<DuelOperation>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			System.Collections.IEnumerator o = obj.DrawCardOwn(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawCardOps(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			DuelOperation obj = (DuelOperation)ToLua.CheckObject<DuelOperation>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			System.Collections.IEnumerator o = obj.DrawCardOps(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DrawThisCard(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			DuelOperation obj = (DuelOperation)ToLua.CheckObject<DuelOperation>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			bool o = obj.DrawThisCard(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_duelData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DuelOperation obj = (DuelOperation)o;
			DuelDataManager ret = obj.duelData;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index duelData on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_duelData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			DuelOperation obj = (DuelOperation)o;
			DuelDataManager arg0 = (DuelDataManager)ToLua.CheckObject<DuelDataManager>(L, 2);
			obj.duelData = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index duelData on a nil value");
		}
	}
}

